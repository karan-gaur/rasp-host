Hi Marzieh 
  
Continuing working on "Email Automation Task 1: Package Solution & Integrate into A2019". 
Making following adjustments to HmHCo project for creating Output File which contains (Email Subject, Email Description, Case Category, Confidence) 
    + Refactoring HmHCo code for only prediction of "Case Category". 
    + Calculating confidence value(in %) for each "Case Category" predictions. 
  
A2019 Command Package: 
    + Continuing implementation of A2019 "Email Automation" package. 
    + Accepted Input for command: 
        -> Config.txt file (delimiter '='): 
            attributes: HostIP, Port, validation rules, output folder, email needs validation output folder, email validated output folder 
        -> Input.csv file 
            Email Subject, Email Description 
  
Thanks 
Manoj/Karan/Himanshu 

==========================================================================================================================================================================================================================================

Hi Marzieh 
  
Continuing working on "Email Automation Task 1: Package Solution & Integrate into A2019". 
Refactoring HmHCo project source for Classification & validation rules 
    + Working on adding up "Case Category" & "Confidence" predicted value columns in output csv file. 
    + updating the source to accept input & output file type from "xlsx" to "csv". 
  
A2019 Command Package: 
    + Continuing implementation of A2019 "Email Automation" command package. 
    + Working on Posting "Config.txt" file and "Input_data.csv" file on server. 
  
Thanks 
Manoj/Karan/Himanshu 

==========================================================================================================================================================================================================================================

Hi Marzieh 
  
Continuing working on "Email Automation Task 1: Package Solution & Integrate into A2019". 
Making following adjustments in HmHCo project source for Classification & validation 
    1. Added endpoint in HmHCo for save validation needs result file (/validation_needs_result) 
        + Case Category is blank 
        + Confidence value is lesser than threshold 
    2. Endpoints to be accessed in A2019 package 
        + Download Output File (endpoint: /classify) 
        + Download Need Validation File (endpoint: /validation_needs_result) 
  
A2019 Command Package ("Email Automation"): 
    + Implementing "Classify" command to 
        Download Output CSV File containing Email Subject, Email Description, Case Category, Confidence 
        Save Output CSV File in local directory path "OutputFolder" in config.txt 
  
On using Trained Model "Case Category_finalized_model.sav" to predict "Case Category" 
    + Confidence is low for input data, that is lesser than the default threshold value (70). 
    + “Y Labels” in trained model (total: 9) = ['Master Data Requests', 'OE: Assessment', 'OE: ISG', 'OE: International', 'OE: K-12', 'OE: School Supply', 'OE: Trade', 'OM: Print & Digital - Non Depo', 'TS: Tier 1']. 
  
  
Thanks 
Manoj/Karan/Himanshu 

==========================================================================================================================================================================================================================================

Hi Marzieh
 
Email Automation Task 1: Package Solution & Integrate into A2019
Evaluating Changes in Usecase/Requirements.
 
Evaluating Desktop push Notification enabled to notify the user with new email content added to Validation Queue. So user can validate it on Validation UI.
 
Making following adjustments in HmHCo project source for Classification & Validation
    + Refactoring HmHCo Source for accepting Input Csv Files.
    + Adding Additional Column labeled "Validation Result" containing status of Valid or Invalid.
A2019 Command Package "Email Automation"
    + Updating Classify command
        Taking Input Folder Path containing Input CSV files with only single row.
    + Working on Iterating Files from Input Folder and Posting on HmHCo Rest-Endpoint "/classify".
 
Thanks
Manoj/Karan/Himanshu

==========================================================================================================================================================================================================================================

Hi Marzieh
 
Email Automation Task 1: Package Solution & Integrate into A2019
 
Evaluating/Testing Desktop Push Notification/Tray Icon feature
    + Adding Push Notification
    + Open browser with dummy url on Right Click TrayIcon.
 
HmHCo Source Code:
    Created Rest End point (/classify)
        + Reading Input Csv File with single Email Data containing (Email Subject, Email Description)
        + Returning Output Csv File containing (Email Subject, Email Description, Case Category, Confidence).
 
A2019 Command Package "Email Automation"
    Updating Classify command:
        + Extracted key-value data (Host, Port, Rules, Confidence, OutputFolder) from “LI_Config.txt”.
        + Working on Http Post Request to Post Input Csv file on HmHCo server (/classify endpoint).
 
Thanks
Manoj/Karan/Himanshu

==========================================================================================================================================================================================================================================

Hi Marzieh
Email Automation Task 1: Package Solution & Integrate into A2019

Testing Desktop Push Notification feature
    + Working on adding event listeners on Tray Icon Message to open Browser with dummy link

HmHCo Source Code:
    Testing Rest End point (/classify) using Postman client
        + Input Csv file with minimal test data (set of 100).
        + Creating Csv File containing the results
            Fields: Email Subject, Email Description, Case Category, Confidence.

A2019 Command Package "Email Automation"
    Classify command:
        + Created Command to Classify the Email Description using HmHCo (/classify) rest endpoint.
        + Testing the "Classify" command using JUnit on local system.
        + Deployed the command on Hopper Platform and testing on the local device.

Thanks
Manoj/Karan/Himanshu

==========================================================================================================================================================================================================================================

Hi Marzieh

Email Automation Task 1: Package Solution & Integrate into A2019
A2019 Command Package "Email Automation"
    "Classify" command:
        + Testing the "Classify" command using JUnit on local system.
        + Code cleaning in Classify command.
        + Appending the Records in "Email Needs Validation CSV File" with Validation Rules
            Case Category is blank.
            Confidence value is lesser than threshold.
        + Updated the command build on Hopper Platform and testing on the local device.
    "Add To Queue" Command:
        + Started Working on add to Queue Command.
        + Input Single Csv row with values (Email Subject, Email Description, Case Category, Confidence).

HmHCo Project:
    + Refactoring HmHCo Source Code.
    + Testing Rest End point (/classify).

Thanks
Manoj/Karan/Himanshu

==========================================================================================================================================================================================================================================

Hi Marzieh

Email Automation Task 1: Package Solution & Integrate into A2019

Have access to Bitbucket repositories with username ( manoj.sharma@automationanywhere.com )
    + https://bitbucket.org/marziehnabi/validation-ui-server/src 
    + https://bitbucket.org/marziehnabi/hmhco-nlp-package/src

require bitbucket access to user account
    + karan.gaur@automationanywhere.com
    + himanshu.singhania@automationanywhere.com

Bitbucket Repositories:
    + HmHCo Project: pushed source code to HmHCo repository.
    + Validation-UI: pushed boilerplate source code.

Validation UI Server:
    + Setting-up boilerplate code for Spring Boot Validation-UI.

"Email Automation" A2019 Command Package
    "Classify":
        + Testing the "Classify" command using JUnit on local system.
    "Add To Queue":
        + Working on add to Queue Command.
        + Input Single Csv row with values (Email Subject, Email Description, Case Category, Confidence).

Please provide access to both EC2 Instances as well.

Thanks
Manoj/Karan/Himanshu

==========================================================================================================================================================================================================================================

Hi Marzieh

Email Automation Task 1: Package Solution & Integrate into A2019

Validation UI Server:
    "Adding functionalities to validation-ui-server"
        + Accepting post request containing (Email Subject, Email Description, Case Category, Confidence).
        + Iterating email's one by one and adding to database.
        + Creating "Get Request" to get all Invalid e-mails from the database.

"Email Automation" A2019 Command Package
    "Add To Queue":
        + Working on add to queue command
        + Reading csv file from Need_Validation_Folder containg emails that need validation.
        + Making a post request to validation-ui-server containing (Email Subject, Email Description, Case Category, Confidence).


Thanks
Karan/Himanshu

==========================================================================================================================================================================================================================================

Hi Marzieh

Email Automation Task 1: Package Solution & Integrate into A2019

Validation UI Server:
    Validation-server backend:
        + Adding Email Data(Email Subject, Email Description, Case Category, Confidence) on Post Request from AddToQueue A2019 command
        + Working on restapi to get all the Email Data/ List of Emails Data.
        + Saving the email data into Database

    Validation-UI Frontend
        + Designing Webpage for Validation UI for custom webpage.
        + Working on display the email data on UI in form of Cards.

Thanks
Karan/Himanshu

==========================================================================================================================================================================================================================================

Hi Marzieh
Email Automation Task 1: Package Solution & Integrate into A2019

Validation UI Server:
	Validation-server backend:
        + Creating api to return list of invalid data containing (Email Subject, Email Description, Case Category, Confidence). 
        + Creating CRUD functionalities for Mail Data for Validation.
        + Working on restapi to Download csv file containing "Mails Validated by user".

    Validation-UI Frontend
        + Adding UI functionality to Validate Mails.
        + Creating UI to display Mail Data to user.


A2019 Command Package "Email Automation"
    "Add To Queue" command:
        + Created Command to get read csv from Email_Need_Validation Folder
        + Sending mail data (Email Subject, Email Description, Case Category, Confidence) to Validation-UI server
        + Testing the "Add To Queue" command using JUnit on local system.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh
Email Automation Task 1: Package Solution & Integrate into A2019=

Validation UI Server:
	Validation-server backend:
        + Created restapi to download all Validated Email Data from the database containing "Validated Case Category" in csv format.

    Validation-UI Frontend
    	+ Working on distinguishing Validated Data from Non-Validated Data
        + Working on Validation-UI frontend.

A2019 Command Package "Email Automation"
    "Add To Queue" command:
        + Uploading Email_Automation package on A-2019.
        	Add To Queue
        	Classify
        + Integrated package on A-2019 Platform in Demo Bot.
        + Testing command on Hopper Platform.
Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh
Email Automation Task 1: Package Solution & Integrate into A2019

Testing Desktop Push Notification feature
    + Working on adding Click Event Listener to open Validation-UI from notifications.

Validation UI Server:
    Validation-server backend:
        + Using true/false flags to check if mail is Validated or Not.
        + Adding Http status codes to response headers of rest api.
        + Pushed code on bitbucket repository - "Validation UI Server".

A2019 Command Package Testing "Email Automation"
    "Updating config.txt file":
        + Adding following information in Config.txt:
            - Validation-UI IP
            - Validation-UI Port Number

    Testing following commands on Hopper Platform:
        + Classify
        + Add to Queue

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh
Email Automation Task 1: Package Solution & Integrate into A2019

Testing Desktop Push Notification feature
    + Creating notifications to inform user about new entry in Validation-UI Queue
    + Integrating notification with "Add To Queue" Command.
    + Testing notifications with "Add To Queue" command using JUnit on local system.

Validation UI Server:
    Validation-server backend:
        + Using true/false flags to check if mail is Validated or Not.
        + Adding Http status codes to response headers of rest api.
        + Pushed code on bitbucket repository - "Validation UI Server".

A2019 Command Package Testing "Email Automation"
    Uploading Email_Automation package:
        + Uploading Email_Automation package on A-2019.
            Add To Queue
            Classify
        + Integrated package on A-2019 Platform in Demo Bot.
        + Testing command on Hopper Platform.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh

Email Automation Task 1: Package Solution & Integrate into A2019
Evaluating and Started working on the new Validation UI frontend Design

Validation UI Front End:
    + Initiated React.JS Validation UI app
    + Working on sidebar UI for "UnClassified" & "Classified".

Desktop Push Notification:
    + Designing Desktop push notifications.
    + Working on adding "On Click" handler on Notification card to open Browser with Validation UI.

"Email Automation" A2019 Command Package ("Classify" & "Add To Queue" Command)
    + Refactoring and cleaning up the code.
    + Adding 'counter' to session map to handle Desktop notification.
    + Working on Integration of Desktop/OS Push Notification in Add To Queue Command.

Thanks
Manoj/Karan/Himanshu

==========================================================================================================================================================================================================================================

Hi Marzieh
Email Automation Task 1: Package Solution & Integrate into A2019

A2019 Command Package & Desktop Push Notification
    + Creating notifications to inform user about new entry in Validation-UI Queue
    + Integrating notification with "Add To Queue" Command.
    + Opening browser on clicking the Notification UI.
    + Testing "Add To Queue" command using JUnit on local system.

Validation-UI
    + Going through with the new figma design for Validation UI.
    + working on the React.JS frontend app.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh
Email Automation Task 1: Package Solution & Integrate into A2019

A2019 Command Package & Desktop Push Notification
    + Final testing of "Classify" & "Add To Queue" Command.
    + Testing Bot on Hopper Platform

Validation-UI
    + Working on validation UI front-end

Desktop Push Notification:
    + Configuring "On Click" button to open Validation UI Home page.
    + Integrating Notifications with "Add To Queue" Command.
    + Testing Notifications with Hopper.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh
Email Automation Task 1: Package Solution & Integrate into A2019

A2019 Command Package & Desktop Push Notification
    + Updating command packages to work with validation-UI.
    + Adding Validation-UI Configurations to command packages.

Validation-UI
    + Working on validation UI front-end.
    + Adding dummy data for display.
    + Deploying Validation-UI Frontend on VM - "ec2-52-88-148-16.us-west-2.compute.amazonaws.com"

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh

Email Automation Task 1: NLP Package Solution & Integrate into A2019

A2019 Command Package & Desktop Push Notification
    + Testing Email Automation Command package on VM - "ec2-54-202-185-197.us-west-2.compute.amazonaws.com".
    + Uploaded a New version of Command Package. 

Validation-UI Frontend
    + Updated ui
    + Removing "ICONS" and "CLASSIFIED" tab
    + Updating Case-Category api.
    + Adding "Case Category" and "Confidence" evaluated by nlp model in Validation-UI

Deployed Validation-UI and HmHCo server on "ec2-52-88-148-16.us-west-2.compute.amazonaws.com".

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh

Email Automation Task 1: NLP Package Solution & Integrate into A2019

A2019 Command Package "Classify" & "AddToQueue" Command
    + Testing Email Automation Command package with large emails dataset.
    + Updated Taskbot on the EC2 and testing on remote machine.

Validation-UI Frontend
    + Working on Integration for Download CSV data API.
    + Working on Integration for Progress Bar Percent API.
    + deployed changes on EC2 instance.

Validation UI Server(Backend):
    + Created API for download CSV 
        Classified Emails
        Un-Classified Emails
        All Emails

Please check Validation UI changes(connect with VPN first) here http://ec2-52-88-148-16.us-west-2.compute.amazonaws.com:3001

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh

Email Automation Task 1: NLP Package Solution & Integrate into A2019

A2019 Command Package "Classify" * "AddToQueue" Command
    + Testing Email Automation Command package with large emails dataset.
    + Deploying Changes in Control Room Taskbot on the EC2 and testing on remote machine.

Validation-UI Frontend
    + Integrated Download CSV data API.
    + Integrated Progress Bar Percentage API.
    + Deployed changes on EC2 instance and testing.

Servers(connect with VPN first)
    + Validation UI: http://ec2-52-88-148-16.us-west-2.compute.amazonaws.com:8082
    + HmHCo NLP pakcage: http://ec2-52-88-148-16.us-west-2.compute.amazonaws.com:4000

Control Room:
    http://ec2-54-202-185-197.us-west-2.compute.amazonaws.com:8081
    CR username: email.automation.creator
    CR password: automation#2019

Input directories:
    + Config File: C:\Email Automation\Input\config.txt
    + Input Dataset(csvs): C:\Email Automation\Input\input-csvs

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

+ Server Details:
    1. Validation UI: " http://ec2-52-88-148-16.us-west-2.compute.amazonaws.com:8082 "
    2. HmHCo NLP pakcage: " http://ec2-52-88-148-16.us-west-2.compute.amazonaws.com:4000 "
    3. Control Room: " http://ec2-54-202-185-197.us-west-2.compute.amazonaws.com:8081/#/login?next=/index "

+ URL to clear Validation-UI data: " http://ec2-52-88-148-16.us-west-2.compute.amazonaws.com:8082/queue/email/delete ".

+ Integrating & Testing Validation-UI:
    1. Integrating Validaiton-UI Backend and Frontend.
    1. Testing Validation-UI on VM.

+ Testing Bot on VM & Creating Instruction Manual.

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 2: Highlighting Key-phrases used to determine Case Category

HmHCo Package:
    + Going through requirements for task 2.
    + Working on extracting key phrases from individual mails.

Open Questions:
    + How many keywords are to be extracted from the email/algorithm .
    + Currently we are saving only four columns in output csv file (Email Subject, Email Description, Case category, Confidence). But there will be another new column added (Keywords) as 5th column which we will highlight on Validation UI.

We can have a call scheduled for tomorrow to discuss above mentioned queries.

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 2: Highlighting Key-phrases used to determine Case Category

HmHCo Package:
    + Adding parameter to read maximum number of keywords in "config.txt".
    + Adding Columns to HmHCO to save Keywords used for predicting Case-Category.
    + Evaluating algorithm to find out keywords.

Validation-UI:
    + Highlighting keyphrases in Validatin-UI emails description.
    + Adding production build with validation-ui backend server.

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 2: Highlighting Key-phrases used to determine Case Category

A2019 Email automation package:-
1. Updating Classify and AddToQueue command
    a. Classify: Adding new column keywords in output csv file and email needs validation csv file 
    b. AddToQueue: posting email keywords list on validation ui server

2. HmHCo server:- Evaluating keywords using pretrained model's vocab sorted on their importance from email to be highlighted.

3. Validation UI server/frontend
    a. Updated email model with additional keywords list field
    b. added highlighter to highligjt list of keywords

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 2: Highlighting Key-phrases used to determine Case Category

A2019 Email automation package:-
1. Updating Classify and AddToQueue command
    a. AddToQueue: Sending keywords in POST request to Validation-UI server from csv files.
    b. Testing Classify and AddToQueue command on local machine.

2. HmHCo server:-
    a. Sorting keywords in email based on importance in model's vocab.
    b. Extracting top keywords from sorted list as mentioned in "config.txt".

3. Validation UI server/frontend : 
    a. Testing Validation-UI highlight feature with keywords from Validation-UI Server.

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: Improving Algorithm

1. HmHCo server:-
    a. Creating endpoint to save new data set for model.
    b. Model can be re-trained with newer data. 

2. Data Analysis:-
    a. Merging multiple csv's to single csv containing 112K email data.
    b. Dropping rows having NaN values. Training Data Set = 92K Mails.
    
3. Bert:-
    a. Exploring text classification with bert.

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: Improving Algorithm

1. HmHCo Server:-
    a. Working on Rest-api to re-train model with new Data-Set.
    b. Testing end-point on local machine.

2. Bert:-
    a. Setting up Bert and using Bert's Uncased pretrained model.
    b. Working on Multi-Class Text Classification with Bert.

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: Improving Algorithm

1. Bert:-
    a. Cleaning up the dataset for model training and testing.
    b. preparing dataset for Bert model in 'One-Hot-Encoding' format.
    c. Using 'Keras' with Bert for "Case Category" classification using the dataset(KTrain).

2. XLNet:- Went through document shared "What is XLNet and why it outperforms BERT" (https://towardsdatascience.com/what-is-xlnet-and-why-it-outperforms-bert-8d8fce710335).

3. HmHCo Server:-
    a. Analyzing and calculcating accuracy with re-trained model on local machine (with provided HmHCo source).

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 1: Improving Algorithm

1. Bert:-
    + Creating smaller data set containing 1000 Email_Data.
    + Neglecting Case Categories with Value Count less than 1% of Data Set 
    + Using a batch_size of 6 and number of Epoch as 1 for training the model.
    
2. Text Classification using BERT:-
    + Case Category "OE: Trade" is dominating in the merged data-set. model classifying only "OE: Trade" Case Category for small dataset. 
    + Currently training model using "CPU" that leads to higher computation time with higher number of Epochs(to increase accuracy).

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 1: Improving Algorithm

1. Bert:-
    + Aggregating data set to have equal Case Category Email Data.
    + Model generalizes test data to single Case Category giving low accuracy.
    + Increased size of Data Set to improve model learning efficiency.(1500 Email Data for each Case Category)

2. Text Classification with "Roberta":-
    + Setting up environment and preparing Data Set in form of "Label Encoding".
    + Creating Data Set of 900 Email Data(100 for each Case Category)
    + Model again generalizes test data to single Case Category.

3. Text Classification with "XL-NET":-
    + 

We can schedule a call for tomorrow to discuss what the teams has done so far.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 1: Improving Algorithm

1. Bert:-
    + Evaluating number of features in each Email Data Set for text classification.
    + On increasing features and reducing learning rate model is able to classify data.
    + Model is giving Accuracy of 60% for 900 Email Data.
    + Training model with higher epochs (~ 8) and increasing size of Email Data for better accuracy.

2. XL NET:-
    + Decreasing learning rate to 0.00004 and increasing number of epoch.
    + Accuracy of model on 900 Email Data is ~ 7%

AWS Instance Requirements:-
    + We can chose between p3.2xlarge p3.8xlarge in 'Accelerated Computing'
      Link: https://aws.amazon.com/ec2/instance-types/


Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Instance Requirements:-
    + Bert requires 12 GB of GPU for faster processing
    + We can use p3.2xlarge priced at $3.06/hr 
      Link: https://aws.amazon.com/blogs/aws/new-amazon-ec2-instances-with-up-to-8-nvidia-tesla-v100-gpus-p3/

Time Estimation: Following points should be covered before time estimation
    + Bert has other models as well, currently we are using the smallest one (currently BERT-BASE Uncased).
      Link: https://github.com/google-research/bert#pre-trained-models
    + We need to evaludate other models as well, to compare the accuracy of other models and find the best fit with usecase
      Link: https://github.com/huggingface/transformers#model-architectures


Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 1: Improving Algorithm

Bert:-
    + Creating custom method to evaluate number of features to be used for each data sets.
    + Training Data Set on 1800 Data Set gives 73.33% Validation Accuracy and 73% Test Accuracy.
    + Using clean data set improves accuracy producing 74.04% Validation Accuracy and 74.6% Test Accuracy.
    + Resolved issue to save persisting model on local system using keras.
    + Saving Text Preprocessor used for prediction and loading it with model using pickle.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 1: Improving Algorithm

1. Bert:-
    + Improving Data Cleaning to increase accuracy of model.
    + Training model on 2.5K Data gives 81% Validation Accuracy and 78.5% Test Accuracy.
    + Working on adding model retrain functionality to improve model.

2. DistilBert:-
    + Setting up environment and preparing Data Set in form of "Label Encoding" for training the model.
    + Using larger Data Set with DistilBert which is a lighter and faster version of Bert.
    + Getting Accuracy of 36% with 6K Email Data Sets.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 1: Improving Algorithm

Bert:-
    + Adding retrain functionality on BERT model to reduce computational cost and work with updated Data Set.
    + In model retrain, model can be retrained based on previous Case Categories. 
    + Evaluating best Learning Rate for data set using multiple epochs.(Starting lr = 1e-6).
    + Setting up "Bert Large - Uncased" in place of "Bert Base" in ktrain.
    + Working on removing noisy data using Outlier Detection Techniques.

We have started a new email chain for GPU Instance Requirements. Could you please follow up on that.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 1: Improving Algorithm

1. Bert:-
    + Working on Finding best hyper parameters to be used with Bert Base model.
    + Working on removing noisy data using Clustering of features.
        a. Generating DOC2Vec (a 2-D array) of 1K dataset and taking no of features only 100.
        b. “Doc2Vec” works on the Contextual Meaning of text (as compared to Tf-Idf which is pure frequency-based model).
        c. Working on K-Means approach to detect Outliers.

2. RoBerta Large:-
    + Using RoBerta Large which is based on BERT Large.
    + Getting accuracy of 15.87% with 6K Data and single epoch.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. HmHCo:-
    + Working on end-point to retrain model based on feature provided by user.
    + Modifying code to evaluate Business Process and Platform in email data.

Open Questions:-
    + Which features should be predicted? (For now we are predicting Case Category, Businedd Process & Platform)
    + Do we need to evaluate the confidence of new features? (For now evaluating only for Case Category)
    + Should newly predicted features also be included in validation based on confidence? 
    + Key-phrases for which categories should be evaluated? (For now evaluating only for Case Category)

Thanks
Team 

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. HmHCo:-
    + Working on predicting different features from csv.
    + Using 100 as Threshold Value for "Technical Support Programs".
    + Updating "/classify" end-point to return csv file containing predictions from different features.
    + Creating "/train_all_models" end-point to train all models in queue order.

2. A2019 Command Package:
    a. Classify Command:
        + Adding "ValidationConfidenceThreshold" for all features in config.txt to be used for validation.
        + Working on saving "Email_Needs_Validation.csv" with updated columns returned by HmHCo Server.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. Bert:-
    + Testing bert with 22.5K Email Data (2500 Data per Category)
        a. Validation Accuracy: 87.07
        b. Test Accuracy: 87% (Testing with 10% of total Data Set)

2. A2019 Command Package:-
    a. Classify Command:
        + Working on validating Confidence Threshhold for all categories using "OR" operations.

3. Verify A2019 Email Automation Bot working
    + Testing of end-to-end flow of A2019 Email Automation Bot and verified flow.
    + Resolved issue in saving correct formatted CSV file containing escape characters and updated the Validation-UI backend for same.

We have tested the Bot with 26K Data Set. Also attached instruction set to run the Bot with complete configurations and credentials.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. HmHCo :-
    + Training Model with 90K Data Set for Business Process, Case Description, Platform, Technical Support Programs.
    + Evaluating Test Accuracy for following models :
        a. Business Process - 74.85%
        b. Case Description - 81.82%
        c. Platform - 58.90%
        d. Technical Support Programs - 80.45%

2. A2019 Command Package:-
    a. Classify Command:
        + Validating Email Data based on ValidationConfidenceThreshold value in "config.txt".
        + Testing Classify Command on local machine.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. HmHCo :-
    + Created "/train_all" end-point to train all models from given csv file.
    + Adding columns to csv file to store prediction from models.

2. A2019 Command Package:-
    a. Add To Queue Command
        + Adding Confidence and Keywords for Business Process, Case Description, Platform & Technical Support Programs to Validaiton Queue.
        + Gradle Testing Add To Queue Command on machine.

3. Validation UI:-
    a. Backend:
        + Changing Validation UI Queue to save updated EmailData to database.

Could you please provide the updated design for Validation UI with all features.(Business Process, Case Description, Platform & Technical Support Programs)

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. HmHCo :-
    + Using default models to predict "Related Root Cause Text" & "Related Root Cause Detail Text".
    + Testing updated end-point in HmHCo with larger data sets.

2. Refactoring Validation UI:-
    a. Backend:
        + Changing Email Data Model in spring to work with new columns.
        + Updating saving functionality to save Updated email from Validation UI to database.
        + Working on adding columns in Download Classified/Un-classified csv.
    b. Frontend:
        + Saving Categories for all Features in Validation Frontend.
        + Working on drop-down menu to chagne features.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. HmHCo :-
    + Creating Y-Labels as Case Insensitive to reduce ambiguity in Data Set.
    + Related Root Cause Text Accuracy Score - 74% (Case Insensitive)

2. A2019 Command Package:-
    + Refactoring code to send columns that Need Validation to Validation Queue.
    + Testing Command with updated functionality.

3. Refactoring Validation UI:-
    a. Backend:
        + Updated Backend to work with features sent by A-2019.
        + Created restapi to download Email Data from database containing Classified/Un-Classified Email Data.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. A2019 Command Package:-
    + Adding Confidence threshold for each feature in config.txt and updating 'Add To Queue' accordingly.
    + Testing Both commands 'Add To Queue' and 'Classify'.

2. Refactoring Validation UI:-
    + Working on validation UI manual features Categorization.

We've asked Ega to terminate the GPU instance over the weekend and provide keys to access instance.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. Validation UI :-
    a. Backend:
        + Updating Validation UI server DB Schema according to new use case.
        + Adding seperate Features Table with information containing different features.
        + The updated DB schema will be adaptable to new featuers.

    b. Frontend:
        + Working on Validation UI Radio Components to update features.

2. Bert GPU :-
    a. Setting up Bert Project on GPU instance.

We are facing memory shortage for GPU instance. We have asked IT Support to increase the volumn for root.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. Bert GPU :-
    a. Setting up Tensorflow and required librares on GPU.
    b. Running BERT with 4K DataSet for debugging (68% Accuracy).
    c. Updating Drivers and Libraries for tensorflow to use GPU Processors for evaluation to improve performance.
    d. Running BERT with 90K DataSet on 1 Epoch. (Test Accuracy:89%)

2. Validation UI :-
    a. Backend:
        + Creating API to Update features in Schema for Email Data.
        + Working on sending React Front-End to return Email Data with Features that need Validation.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. A2019 Command Package:-
    + Generating 'Need Validation' file with all features i.e without any null value.
    + Updating 'Add To Queue' according to new DB schema. 
    + Gradle Testing of both updated commands('Classify' & 'Add To Queue'). 

2. Bert:-
    + Testing Whole DataSet (90K) with 8 epochs and getting accuracy of 91%
    + Each Epoch is taking about 1 hour and testing DataSet with increasing no. of epochs

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. A2019 Command Package:-
    + Testing of Both command 'Add To Queue' and 'Classify' for all cases.
    + Preparing Command package to upload it on A2019 Control Room.

2. BERT:-
    + Training BERT model on 90K cleaned dataset with 8 epoch. (Removing Phone Numbers, Email Address, etc).
    + Testing Model with clean and uncleaned data as well.

3. Validation-UI:-
    + Creating Table to save values for Features and their categories in backend.
    + Working on CRUD functionalities for Features Table.

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. A2019 Command Package:-
    + Handling all types of error in newly updated Command Package with Corner cases.  
    + Cleaning the code to reduce Complexity.

2. BERT:-
    Training Different BERT Models:-
        + BERT Base-Cased model on 90K Un-Cleaned dataset with 5 epoch and getting accuracy of 90% 
        + BERT Base-Cased Model on 90K Cleaned Dataset with 2 Epoch and getting accuracy of.
        + Analyzing Accuracy by Comparing different BERT Models. 


Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. HmHCo Server:-
    + Refactoring HmHCo Server NLP Engine.
    + Modularizing Code to have best practices.
    + Testing end-points in HmHCo to work with updated functionality.

2. BERT:-
    Training Different BERT Models:-
        + Analyzing Accuracy by Comparing different BERT Models.
        + BERT Large-uncased Model on 90K Cleaned dataset with 2 epoch and getting accuracy of 89%.
        + BERT Large-uncased Model on 90K Un-Cleaned Dataset with 2 Epoch and getting accuracy of 88%.

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3: - Subtask 2: Predicting features

1. Validaiton-UI
    + Backend: Testing Database functionality for Backend Servers having:
        1. 'Email_Data' Table - Stores 'Email Description' and 'Email Subject' for email_data
        2. ‘Features’ Table   - Having Features Informations with respective ‘Confidence’, 'Feature Type’ & ‘Keywords’ for each Email
        3. ‘EMAIL_DATA_FEATURE_MAPPING’ - Having ONE-to-MANY relation with 'Features' Table.
        4. 'Featrue_Options'  - Consisting of List of Features and their Options. 

2. BERT:-
    + Analyzing Accuracy by Comparing different BERT Models.
        + BERT Large-Cased Model on 90K Un-Cleaned dataset with 2 epoch and getting accuracy of 89%.
    + ML Pipeline:
        a. Understanding concept of Pipeline to train Model with pipeline by using IRIS-dataset.
          Ref:-https://dzone.com/articles/how-to-build-a-simple-machine-learning-pipeline 
        b. Evaluating Merits & demerits of Pipeline in ML. 

Thanks,
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3:- Subtask 2: Predicting features

1. A2019 Command Package:-
    + Updated 'Classify' Command - No pre-requirement of 'Needvalidation' Folder. Command will create this folder if Folder Not Present.
    + Creating build file for command package to Upload it on Control Room.

2. Validation-UI
    Working on UI Frontend using Figma Design:-
    + Disabling Radio Options for Validated Features.
    + Enabling 'Save' option after all Features are Validated.

3. HMHCO:-
    + Working on Integrating BERT Models with HmHCo Server.
    + Testing prediction scores for Bert_Models on local Machine.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Hi Marzieh,

Email Automation Task 3:- Subtask 2: Predicting features

1. A2019 Command Package:-
    Adding Commands to Command Package
    a. Init Command:
        + Adding Radio Option to select configuration parameters from 'config.txt' or Manually Adding configuration using Action UI.
    b. Eml To CSV:
        + Working on '.eml' to '.csv' convertor. 

2. Validation-UI: Working on UI Front-end using Figma Design:-
    a. Refactoring validation UI:-
        + Reducing Font Size.
        + Switching 'Save' and 'Download CSV' button's positions.


Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3:- Subtask 2: Predicting features

1. A2019 Command Package:-
    Working on 
    a. Init Command:
        + To fetch 'config.txt' data from UI.
    b. Eml To CSV:
        + Working on '.eml' to '.csv' convertor.
        + Creating CSV file having 'Email Subject' and 'Email Description'.

2. Validation-UI: Working on UI Front-end using Figma Design:-
    a. Refactoring validation UI:-
        + Working on adding "Auto Refresh" - To Update Email Data on Validation UI.
        + Changing Structure to display indvidual emails in Card Stack.
    b. Backend:-
        + Creating endpoint 'is-valid/{id}' to fetch individual emails from backend server.


Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3:- Subtask 2: Predicting features

1. A2019 Command Package:-
    Working on 
    a. Init Command:
        + To fetch 'config.txt' data from UI.
    b. Eml To CSV:
        + Working on '.eml' to '.csv' convertor.
        + Saving Email Data to '.csv' file using UUID Generator for Unique Naming
        + Deleting '.eml' files from 'Input' folder after processing.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3:- Subtask 2: Predicting features

1. A2019 Command Package:-
    Working on 
    a. Init Command:
        + To fetch 'config.txt' data from UI.
    b. Eml To CSV:
        + Working on '.eml' to '.csv' convertor.
        + Saving Email Data to '.csv' file using UUID Generator for Unique Naming
        + Deleting '.eml' files from 'Input' folder after processing.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3:- Subtask 2: Predicting features

1. A2019 Command Package:-
    Working on 
    a. Init Command:
        + Testing Init Command with config.txt file and GUI functionality.
    b. Eml To CSV:
        + Resolving Issue Regarding Emails with no Subject.
        + Resolving Issue With Email Data having duplicate Email Subjects.
        + Testing Eml to CSV Convertor.

2. Validation-UI:-
    a. Backend:
        + Using pagination in backend server to fetch individual Email Data from database.
    b. Frontend:
        + Added auto-refresh functionality to refresh Email Data count from database.
        + Decreasing font sizes.
        + Testing changes on Local Machine.

Thanks
Team

==========================================================================================================================================================================================================================================

Hi Marzieh,

Email Automation Task 3:- Subtask 2: Predicting features

1. A2019 Command Package:-
    a. Get Emails:
        + Integrating command package to work with Email Server.
        + Fetching Email from Mail Server and saving to Input Folder with ".eml" extensions.
    b. Eml To Csv:
        + Converting ".eml" files to ".csv" with UUID file names to avoid conflicts b/w emails with similar Subjects.
        + Removing  files with ".eml" extension in Input Folders.

2. HmHCo Server:-
    a. Wokring on deploying HmHCo server in production on EC2 instance.
    b. Using mod_wsgi to deploy flask application on Windows Instance.

Thanks
Team

==========================================================================================================================================================================================================================================
==========================================================================================================================================================================================================================================
==========================================================================================================================================================================================================================================
Outlier Detection
+taking only first 2 Principal Components (almost 99.7% variance is explained by first 2 Component) for Clustering & Local Outlier 
   Factor estimation.
+Local Outlier Factor (Proximity) based approach:-
    +calculating ‘LOF’ values for all data-points(in1k data), sorting out those in decreasing order will give top n probable outliers 
     with ’n’ as input parameter

==========================================================================================================================================================================================================================================
